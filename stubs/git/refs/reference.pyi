from .symbolic import SymbolicReference
from git.util import Iterable, LazyMixin
from typing import Any, Optional

class Reference(SymbolicReference, LazyMixin, Iterable):
    def __init__(self, repo: Any, path: Any, check_path: bool = ...) -> None: ...
    def set_object(self, object: Any, logmsg: Optional[Any] = ...): ...
    @property
    def name(self): ...
    @classmethod
    def iter_items(cls, repo: Any, common_path: Optional[Any] = ...): ...
    @property
    def remote_name(self): ...
    @property
    def remote_head(self): ...
